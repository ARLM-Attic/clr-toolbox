<#

// LICENSE: LGPL 3 - https://www.gnu.org/licenses/gpl-3.0.txt

// s. http://blog.marcel-kloubert.de

#>
<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#><#

var ctx = new DataObjectGenerationContext(this);

foreach (var configFile in ctx.WORKING_DIRECTORY.GetFiles("*.xml"))
{
    this.GenerateDataObjectFromConfigFile(configFile,
                                          ctx);
}

ctx.FILE_MANAGER.Process();

#>
<#+

void GenerateDataObjectFromConfigFile(FileInfo configFile, DataObjectGenerationContext ctx)
{
    var configFilePath = configFile.FullName;
    var namespaceExtension = Path.GetFileNameWithoutExtension(configFilePath).Trim();

    ctx.FILE_MANAGER.StartNewFile(namespaceExtension + ".AutoGenerated.cs");
}

sealed class DataObjectGenerationContext
{
    public readonly CodeGenerationTools CODE;
    public readonly EntityFrameworkTemplateFileManager FILE_MANAGER;
    public readonly MetadataLoader LOADER;
    public readonly string NAMESPACE;
    public readonly GeneratedTextTransformation PARENT;
    public readonly CodeRegion REGION;
    public readonly MetadataTools TOOLS;
    public readonly DirectoryInfo WORKING_DIRECTORY;

    public DataObjectGenerationContext(GeneratedTextTransformation parent)
    {
        this.PARENT = parent;
        this.WORKING_DIRECTORY = new DirectoryInfo(this.PARENT.Host.ResolvePath("./"));

        this.CODE = new CodeGenerationTools(this.PARENT);
        this.LOADER = new MetadataLoader(this.PARENT);
        this.REGION = new CodeRegion(this.PARENT, 1);
        this.TOOLS = new MetadataTools(this.PARENT);
        this.FILE_MANAGER = EntityFrameworkTemplateFileManager.Create(this.PARENT);

        this.NAMESPACE = this.CODE.VsNamespaceSuggestion();
    }
}

#>